{"version":3,"sources":["src/model.js","src/Views/AddContactView.js","src/Views/ContactContainerView.js","src/Views/searchView.js","src/controller.js"],"names":["state","isSearching","ContactPerson","name","phone","email","id","Math","random","toFixed","contact","list","JSON","parse","localStorage","getItem","push","setItem","stringify","AddContactView","document","querySelector","_formContainer","_addContactBtn","addEventListener","toggleModal","bind","event","preventDefault","console","log","_modal","classList","toggle","handler","TypeError","_inputName","value","_inputEmail","_inputPhone","ContactContainerView","data","html","_container","innerHTML","applyDeleteEvent","deleteBtns","querySelectorAll","forEach","btn","onDelete","insertAdjacentHTML","Array","isArray","SearchView","container","ev","toggleButtons","inputQuery","getContactsFromLS","controlContactDelete","filter","render","handleSearchClear","controlAddContact","Name","Email","Phone","newContact","saveContactInLS","clearForm","pushContactIntoContainer","handleSearch","query","searchView","location","hash","search","results","includes","toString","controlHashChange","split","length","e","init","addContactSubmitListner","addDeleteListner","addSubmitEvent","addHandleClear","window","onhashchange"],"mappings":"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C,KAAL,CAAWC,SIMxB,CAAcoD,EJNsB,CAACnD,EIMrC,KJNwB,CAAqB,UAArB,KAAoC,IAA/C,CAAX;AEfE,AEqBJ,AJLEJ,MIKmBwD,AJLnBxD,IAAI,CEhBG8B,AEqBT,AJLOzB,GIKwBG,CFrB3B,AFgBF,CAAUT,EEhBI+B,IAAZ,CFgBF,cIKF,CAAqB0B,KAArB,CAFmC,CAEW;AJJ5CrD,MAAAA,KCTA,ODSY,CAACG,OAAb,CAAqB,KCTTU,KAAZ,ADSA,ECTmB,ADScf,IAAI,CAACM,SAAL,CAAeP,IAAf,CAAjC;ACREgB,ACRA,AEqBJ,AJJC,MCTGA,AGaEyC,IFrBI1B,CDQD,AEWP,CFXQd,ECRI,EEqBE,GAAG,IAAI1B,GHbnB,UEWc,IDnBD,GEqBE,CFrBL,AEqBuB+D,IAAlB,EAAwBE,KAAxB,EAA+BD,KAA/B,CAAnB,+BFrBiB,IAAH,CAAV;ADSArC,AEWA,ACEJA,EAAAA,IHbIA,GGaG,CAACC,CDFCyB,EFXE,AGaX,CHbYzB,AGaA,GHbR,CAAY,EEWZ,CAAeT,CCEnB,CHbqBU,CGaCqC,KHblB,KEWA,ACEJ,CDFiC,CCFE,CAIA,aDF/B,EAA8CpC,SAA9C,CAAwDC,MAAxD,CAA+D,QAA/D;ADnBA,ACoBA,WDpBKU,ACoBAY,SAAL,CDpBA,ACoBelC,CDpBCuB,SAAhB,GAA4BF,ACoB5B,CAA6B,GDpB7B,CAHW,CAGuB,QCoBlC,EAA4CV,SAA5C,CAAsDC,MAAtD,CAA6D,QAA7D;AFXA,AEYD,ACCHmC,EAAAA,SHbSrC,CGaC,CAACsC,IHbP,CAAYrC,SAAZ,CAAsBC,AGa1B,MHbI,CAA6B,QAA7B,EAHiB,CAGsB;ACRvC,WAAKY,gBAAL;ADSD,ACRA,AEqBH1B,0BAAemD,SAAf;SDAE,eAAY;AACV,ACAJ9B,aDAW,KAAKkB,UAAL,CAAgBrB,GCANkC,EDAjB,sBCAJ,CAA8CH,UAA9C;ADCG,ACAJ,CARD,UHLI,ACRA,4BAAmB,KDQKlC,OAAxB,EAAiC;AAAE,ACRhB;ADSjB,AGcN,IAAMsC,MHdI,MGcQ,CHdDtC,EGcI,KHdX,IGcJsC,CHduB,UAAvB,CGce,CHdoB,AGcnB7C,KAA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","file":"controller.0b66e5cf.js","sourceRoot":"..","sourcesContent":["export let state = {\n  isSearching: false,\n};\n\nexport class ContactPerson {\n  constructor(name, phone, email) {\n    this.name = name;\n    this.phone = phone;\n    this.email = email;\n    this.id = `${name}-${phone}-${Math.random().toFixed(2)}`;\n  }\n\n  saveContactInLS() {\n    const contact = { //save in localstorage\n      name: this.name, //key:value\n      phone: this.phone,\n      email: this.email,\n      id: this.id,\n    };\n    let list = JSON.parse(localStorage.getItem(\"contacts\") || \"[]\");\n    list.push(contact);\n    localStorage.setItem(\"contacts\", JSON.stringify(list));\n  }\n}\n","class AddContactView {\n    _modal = document.querySelector(\".add_contact_modal\"); //acess the modal like open and close it\n    _formContainer = document.querySelector(\".add_contact_form\");\n    _inputName = this._formContainer.querySelector(\".name_input\");\n    _inputPhone = this._formContainer.querySelector(\".phone_input\");\n    _inputEmail = this._formContainer.querySelector(\".email_input\");\n    _addContactBtn = document.querySelector(\".add_contact_btn\");\n  \n    constructor() {\n      this._addContactBtn.addEventListener(\"click\", this.toggleModal.bind(this));//onclick to open the addcontact form ?????????\n      this._formContainer.querySelector(\".close\").addEventListener(\"click\", this.toggleModal.bind(this));//close the opened form.\n    }\n    toggleModal(event) {\n      event.preventDefault();\n      console.log(this._modal);\n      this._modal.classList.toggle(\"hidden\");//remove the hidden class when click\n    }\n  \n    addContactSubmitListner(handler) { //handler fn\n      if (typeof handler !== \"function\") //if not a fn throw error\n        throw new TypeError(\"handler must be a function\");\n      this._formContainer.addEventListener(\"submit\", handler.bind(this));\n    }\n  \n   \n  \n    clearForm() { //clear the for after saveit\n      this._inputName.value = \"\";\n      this._inputEmail.value = \"\";\n      this._inputPhone.value = \"\";\n    }\n  \n    get Name() {  //get the function\n      return this._inputName.value;\n    }\n    get Phone() {\n      return this._inputPhone.value;\n    }\n    get Email() {\n      return this._inputEmail.value;\n    }\n  }\n  \n  export default new AddContactView();\n  ","class ContactContainerView {    //its all control by controller\n    _container = document.querySelector(\".contacts_container\");\n  \n    render(data) {  //it will shows all the data\n      this.data = data;\n      const html = this.#generateHTMLString();\n      this._container.innerHTML = html; //look below\n      this.applyDeleteEvent();\n    }\n  \n    applyDeleteEvent() {\n      const deleteBtns = document.querySelectorAll(\".delete_contact\");\n      deleteBtns.forEach((btn) => {\n        btn.addEventListener(\"click\", () => {\n          this.onDelete(btn.id);\n        });\n      });\n    }\n  \n    addDeleteListner(handler) { //delete fn in cc\n      this.onDelete = handler;\n    }\n  \n    pushContactIntoContainer(contact) { //recently added contact are put in top\n      const html = this.#generatCardContactHTML(contact);\n      this._container.insertAdjacentHTML(\"afterbegin\", html);\n      this.applyDeleteEvent();\n    }\n    #generateHTMLString() {\n      const data = this.data;\n      let html = \"\"; //empty string\n      if (Array.isArray(data)) { //for each array we want to create a contact card\n        data.forEach((contact) => {\n          html += this.#generatCardContactHTML(contact); //add html elements by call another fn below\n        });\n        return html;\n      }\n    }\n    #generatCardContactHTML(contact) {\n      return ` <div class=\"contact_card\">\n              <div class=\"contact_info\">\n                <div style=\"font-size:x-large\">${contact.name}</div>\n                <div>${contact.phone}</div>\n                <div>${contact.email}</div>\n              </div>\n              <button class=\"delete_contact\" id=\"${contact.id}\">delete</button>\n          </div>`;\n    }\n  }\n  \n  export default new ContactContainerView();\n  ","class SearchView {\n    container = document.querySelector(\".search_form\");\n    inputQuery = document.querySelector(\".search_input\");\n  \n    addHandleClear(handler) {\n      this.container\n        .querySelector(\".clear_search\")\n        .addEventListener(\"click\", handler.bind(this));\n    }\n  \n    addHandleClear(handler) {\n      this.container\n        .querySelector(\".clear_search\")\n        .addEventListener(\"click\", handler.bind(this));\n    }\n  \n   \n    addSubmitEvent(handler) {\n      this.container.addEventListener(\"submit\", (ev) => {\n        handler(ev);\n        this.toggleButtons();\n      });\n    }\n  \n    toggleButtons() {\n      this.container.querySelector(\".clear_search\").classList.toggle(\"remove\");\n      this.container.querySelector(\".search_btn\").classList.toggle(\"remove\");\n    }\n  \n    get query() {\n      return this.inputQuery.value;\n    }\n    clearForm() {\n      this.inputQuery.value = \"\";\n    }\n  }\n  \n  export default new SearchView();\n  ","import { ContactPerson, state } from \"./model\";\nimport AddContactView from \"./Views/AddContactView\";\nimport ContactContainerView from \"./Views/ContactContainerView\";\nimport searchView from \"./Views/searchView\";\n\nconst getContactsFromLS = () => {\n  return JSON.parse(localStorage.getItem(\"contacts\") || \"[]\");//call from ls and render below\n};\n\nconst controlContactDelete = (id) => {\n  let list = getContactsFromLS();//get contact\n  if (Array.isArray(list)) { //if its array\n    list = list.filter((contact) => {  //filter it\n      if (contact.id === id) return false;\n      else return true;\n    });\n    ContactContainerView.render(list);//rerender it\n    if(state.isSearching) handleSearchClear();\n    list = JSON.stringify(list);//save in ls\n    localStorage.setItem(\"contacts\", list);\n  }\n};\n\nconst controlAddContact = (event) => {\n  event.preventDefault();\n  const { Name, Email, Phone } = AddContactView;//extract value from addcontactview\n  const newContact = new ContactPerson(Name, Phone, Email);\n  console.log(\"saving\", newContact); //save in ls\n  newContact.saveContactInLS();\n  AddContactView.clearForm();\n  ContactContainerView.pushContactIntoContainer(newContact);\n};\n\nconst handleSearch = (event) => { //searching fn\n  state.isSearching = true; \n  event.preventDefault();\n  const { query } = searchView;\n  location.hash = `#q=${query}`;//it apply in hash\n};\n\nconst search = (query) => {  //to make search opertion\n  const list = getContactsFromLS();\n  let results = []; //to make firstofall results are empty\n  if (Array.isArray(list)) {\n    list.forEach((contact) => {\n      if (\n        contact.name.includes(query) ||\n        contact.phone.toString().includes(query) ||\n        contact.email.includes(query)\n      ) {\n        results.push(contact);\n      }\n    });\n  }\n  return results;\n};\n\nconst controlHashChange = () => {\n  const query = location.hash.split(\"=\")[1];\n  console.log(\"query is \", query);\n  const results = search(query);\n  if (typeof query !== \"undefined\" && query.length > 0)\n    ContactContainerView.render(results);\n  else ContactContainerView.render(getContactsFromLS());\n};\n\nconst handleSearchClear = (e) => { ///clear action\n  state.isSearching = false;\n  if(e)e.preventDefault();\n  searchView.toggleButtons();\n  searchView.clearForm();\n  location.hash = \"\";\n};\n\nconst init = () => {\n  AddContactView.addContactSubmitListner(controlAddContact);\n  ContactContainerView.addDeleteListner(controlContactDelete);\n  ContactContainerView.render(getContactsFromLS());\n  searchView.addSubmitEvent(handleSearch);\n  searchView.addHandleClear(handleSearchClear);\n  window.onhashchange = controlHashChange;\n};\n\ninit();\n"]}